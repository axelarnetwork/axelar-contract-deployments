name: Update config

on:
  pull_request_target:
    types: [closed]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-config:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CHAINS_PAT: ${{ secrets.CHAINS_PAT }}
      EXTERNAL_REPO: ${{ secrets.EXTERNAL_REPO }}

    steps:
      - name: Checkout axelar-contract-deployments repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if PR was merged
        id: check_if_merged
        run: |
          if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
            echo "PR was not merged. Exiting."
            exit 0
          fi

      - name: Get the merge commit SHA
        id: merge_commit
        run: |
          MERGE_COMMIT=$(git log -1 --pretty=format:"%H")
          echo "MERGE_COMMIT=$MERGE_COMMIT" >> $GITHUB_ENV

      - name: Determine NETWORKS
        id: determine_networks
        run: |
          echo "Checking modified files in commit ${{ env.MERGE_COMMIT }}"
          MODIFIED_FILES=$(git diff --name-only HEAD~1..HEAD)
          echo "Modified files: $MODIFIED_FILES"

          NETWORKS=()

          if echo "$MODIFIED_FILES" | grep -q "axelar-chains-config/info/mainnet.json"; then
            NETWORKS+=("mainnet")
          fi
          if echo "$MODIFIED_FILES" | grep -q "axelar-chains-config/info/testnet.json"; then
            NETWORKS+=("testnet")
          fi
          if echo "$MODIFIED_FILES" | grep -q "axelar-chains-config/info/stagenet.json"; then
            NETWORKS+=("stagenet")
          fi
          if echo "$MODIFIED_FILES" | grep -q "axelar-chains-config/info/devnet-amplifier.json"; then
            NETWORKS+=("devnet-amplifier")
          fi

          if [ ${#NETWORKS[@]} -eq 0 ]; then
            echo "No relevant changes detected."
            echo "NETWORKS=none" >> $GITHUB_ENV
            exit 0
          fi

          echo "Detected networks: ${NETWORKS[*]}"
          echo "NETWORKS=${NETWORKS[*]}" >> $GITHUB_ENV

      - name: Checkout external repository
        if: env.NETWORKS != 'none'
        uses: actions/checkout@v4
        with:
          repository: axelarnetwork/${{ secrets.EXTERNAL_REPO }}
          path: ${{ secrets.EXTERNAL_REPO }}
          token: ${{ secrets.CHAINS_PAT }}

      - name: Install jq
        if: env.NETWORKS != 'none'
        run: sudo apt-get install -y jq

      - name: Setup Branch Name
        if: env.NETWORKS != 'none'
        id: branch-name
        run: echo "branch=feat/config-update-$(date +'%Y-%m-%d-%H-%M-%S')" >> "$GITHUB_OUTPUT"

      - name: Create branch and generate config
        if: env.NETWORKS != 'none'
        run: |
          cd ${{ secrets.EXTERNAL_REPO }}
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-interaction
          git config --local user.email "devops@axelar.network"
          git config --local user.name "devops"
          git checkout -b ${{ steps.branch-name.outputs.branch }}

          for NETWORK in ${{ env.NETWORKS }}; do
            echo "Generating config for $NETWORK"
            poetry run python generate.py --network "$NETWORK" gen-configs all-configs
          done

          git add --all
          git commit -m "create branch ${{ steps.branch-name.outputs.branch }}"
          git push --set-upstream origin ${{ steps.branch-name.outputs.branch }}

      - name: Create Pull Request
        if: env.NETWORKS != 'none'
        id: create_pr
        run: |
          cd ${{ secrets.EXTERNAL_REPO }}
          PR_TITLE="feat: update configurations for ${{ env.NETWORKS }} from axelar-contract-deployments"
          PR_BODY="Auto-generated PR with updated configuration files"
          PR_HEAD="${{ steps.branch-name.outputs.branch }}"
          PR_BASE="main"
          RESPONSE=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.CHAINS_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/axelarnetwork/${{ secrets.EXTERNAL_REPO }}/pulls \
            -d "{\"title\":\"$PR_TITLE\",\"body\":\"$PR_BODY\",\"head\":\"$PR_HEAD\",\"base\":\"$PR_BASE\"}")
          PR_NUMBER=$(echo $RESPONSE | jq -r .number)
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

      - name: Merge Pull Request
        if: env.NETWORKS != 'none'
        run: |
          PR_NUMBER=${{ env.PR_NUMBER }}
          PR_TITLE="chore: update configurations for ${{ env.NETWORKS }}"
          curl -s -X PUT \
            -H "Authorization: token ${{ secrets.CHAINS_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/axelarnetwork/${{ secrets.EXTERNAL_REPO }}/pulls/$PR_NUMBER/merge \
            -d "{\"commit_title\":\"Merge PR #$PR_NUMBER: $PR_TITLE\",\"merge_method\":\"squash\"}"
