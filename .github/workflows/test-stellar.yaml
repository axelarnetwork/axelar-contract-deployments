name: Test Stellar

on: pull_request

jobs:
  check-relevant-changes:
    name: Check for Relevant Changes
    runs-on: blacksmith-2vcpu-ubuntu-2204
    outputs:
      run_tests: ${{ steps.filter.outputs.stellar == 'true' || steps.filter.outputs.common == 'true' || steps.filter.outputs.github == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            stellar:
              - 'stellar/**'
            common:
              - 'common/**'
            github:
              - '.github/workflows/test-stellar.yaml'
      - name: Summarize Changes
        run: |
          echo "Changes in stellar: ${{ steps.filter.outputs.stellar }}"
          echo "Changes in common: ${{ steps.filter.outputs.common }}"
          echo "Changes in github: ${{ steps.filter.outputs.github }}"

  test-stellar:
    name: Test Stellar
    needs: check-relevant-changes
    if: ${{ needs.check-relevant-changes.outputs.run_tests == 'true' }}
    runs-on: blacksmith-8vcpu-ubuntu-2204
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout axelar-amplifier-stellar repo
        uses: actions/checkout@v4
        with:
          repository: axelarnetwork/axelar-amplifier-stellar
          path: axelar-amplifier-stellar

      - name: Get latest short commit for axelar-amplifier-stellar
        id: commit_hash
        run: |
          cd axelar-amplifier-stellar
          git fetch --all
          COMMIT_HASH=$(git rev-parse --short HEAD)
          echo "hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Install Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Stellar network
        uses: ./.github/actions/setup-stellar

     ###### Environment Variables ######

      - name: Set Environment Variables
        run: |
          echo "destinationChain=remote" >> $GITHUB_ENV
          echo "destinationAddress=0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266" >> $GITHUB_ENV
          echo "data=0x1234" >> $GITHUB_ENV
          echo "accountAddress=$(awk -F '=' '/^ACCOUNT_ID=/{print $2}' .env)" >> $GITHUB_ENV

          config=$(cat axelar-chains-config/info/local.json)
          echo "itsHubAddress=$(echo $config | jq -r '.axelar.contracts.InterchainTokenService.address')" >> $GITHUB_ENV

      ###### Command: Deploy Contract ######

      - name: Deploy AxelarOperators
        run: node stellar/deploy-contract deploy AxelarOperators --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy AxelarGasService
        run: node stellar/deploy-contract deploy AxelarGasService --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy AxelarGateway
        run: node stellar/deploy-contract deploy AxelarGateway --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy InterchainTokenService
        run: node stellar/deploy-contract deploy InterchainTokenService --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy AxelarExample
        run: node stellar/deploy-contract deploy AxelarExample --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy Upgrader
        run: node stellar/deploy-contract deploy Upgrader --version ${{ steps.commit_hash.outputs.hash }}

      - name: Deploy Multicall
        run: node stellar/deploy-contract deploy Multicall --version ${{ steps.commit_hash.outputs.hash }}

      ###### Command: Gateway ######

      - name: Gateway Paused
        run: node stellar/contract.js paused AxelarGateway

      - name: Gateway Pause
        run: node stellar/contract.js pause AxelarGateway

      - name: Gateway Unpause
        run: node stellar/contract.js unpause AxelarGateway

      - name: Gateway Call Contract
        run: node stellar/gateway.js call-contract ${{ env.destinationChain }} ${{ env.destinationAddress }} ${{ env.data }}

      - name: Gateway Rotate Signers
        run: node stellar/gateway.js rotate --new-nonce test --signers wallet

      ###### Command: ITS ######

      - name: ITS Paused
        run: node stellar/contract.js paused InterchainTokenService

      - name: ITS Pause
        run: node stellar/contract.js pause InterchainTokenService

      - name: ITS Unpause
        run: node stellar/contract.js unpause InterchainTokenService

      - name: Add Trusted Chain
        run: node stellar/its.js add-trusted-chains ${{ env.destinationChain }}

      - name: Remove Trusted Chain
        run: node stellar/its.js remove-trusted-chains ${{ env.destinationChain }}

      - name: Add All Trusted Chains
        run: node stellar/its.js add-trusted-chains all

      - name: Remove All Trusted Chains
        run: node stellar/its.js remove-trusted-chains all

      ###### Command: ITS Example ######

      - name: Prepare ITS Example Parameters
        run: |
          echo "name=TEST" >> $GITHUB_ENV
          echo "symbol=TEST" >> $GITHUB_ENV
          echo "decimal=18" >> $GITHUB_ENV
          echo "salt=0x1234" >> $GITHUB_ENV
          echo "amount=1" >> $GITHUB_ENV

          # Note that tokenId is hardcoded since it's derivation must always be the same
          echo "tokenId=0x1829aae91cedf3603a9441688a099b4fcbdb6733b464027c69814b80ef420ada" >> $GITHUB_ENV

      - name: Add Trusted Chains
        run: node stellar/its.js add-trusted-chains ${{ env.destinationChain }} ${{ env.itsHubAddress }}

      - name: Deploy Test Tokens
        run: |
          node stellar/its.js deploy-interchain-token ${{ env.name }} ${{ env.symbol }} ${{ env.decimal }} ${{ env.salt }} ${{ env.amount }}
          node stellar/its.js deploy-remote-interchain-token ${{ env.salt }} ${{ env.destinationChain }}

      - name: Send Token to another chain
        run: node stellar/its.js interchain-transfer ${{ env.tokenId }} ${{ env.destinationChain }} ${{ env.destinationAddress }} ${{ env.amount }} --data ''

      ###### Command: ITS Flow Limit ######

      - name: ITS Flow Limit
        run: node stellar/its.js flow-limit ${{ env.tokenId }}

      - name: ITS Flow Limit Set
        run: node stellar/its.js set-flow-limit ${{ env.tokenId }} 1

      - name: ITS Flow Limit Remove
        run: node stellar/its.js remove-flow-limit ${{ env.tokenId }}

      ###### Command: Operators ######

      - name: Operator
        run: node stellar/operators is-operator ${{ env.accountAddress }}

      - name: Add Operator
        run: node stellar/operators add-operator ${{ env.accountAddress }}

      - name: Remove Operator
        run: node stellar/operators remove-operator ${{ env.accountAddress }}
