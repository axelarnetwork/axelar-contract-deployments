name: Test Stellar

on: pull_request

jobs:
  check-relevant-changes:
    name: Check for Relevant Changes
    runs-on: blacksmith-2vcpu-ubuntu-2204
    outputs:
      run_tests: ${{ steps.filter.outputs.stellar == 'true' || steps.filter.outputs.common == 'true' || steps.filter.outputs.github == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            stellar:
              - 'stellar/**'
            common:
              - 'common/**'
            github:
              - '.github/workflows/test-stellar.yaml'
      - name: Summarize Changes
        run: |
          echo "Changes in stellar: ${{ steps.filter.outputs.stellar }}"
          echo "Changes in common: ${{ steps.filter.outputs.common }}"
          echo "Changes in github: ${{ steps.filter.outputs.github }}"

  test-stellar:
    name: Test Stellar
    needs: check-relevant-changes
    if: ${{ needs.check-relevant-changes.outputs.run_tests == 'true' }}
    runs-on: blacksmith-4vcpu-ubuntu-2204
    steps:
      # this sets up nested repos: https://github.com/actions/checkout?tab=readme-ov-file#checkout-multiple-repos-nested
      # axelar-contract-deployments
      #   - axelar-amplifier-stellar
      #
      # future steps depend on this directory structure
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout axelar-amplifier-stellar repo
        uses: actions/checkout@v4
        with:
          repository: axelarnetwork/axelar-amplifier-stellar
          path: axelar-amplifier-stellar

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18' # Hardcoded to ensure consistency.
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Install stable Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.81.0
          targets: wasm32-unknown-unknown

      - name: Install Stellar CLI
        run: cargo install --locked stellar-cli --version 22.2.0 --features opt

      - name: Setup Stellar local network
        id: setup_network
        run: |
          # stellar container start --protocol-version <PROTOCOL_VERSION> <NETWORK>
          stellar container start --protocol-version 22 local
          echo "rpc_url=http://localhost:8000/soroban/rpc" >> $GITHUB_OUTPUT
          echo "network_passphrase=Standalone Network ; February 2017" >> $GITHUB_OUTPUT

      - name: Add as configured network
        run: |
          stellar network add local \
              --rpc-url "${{ steps.setup_network.outputs.rpc_url }}" \
              --network-passphrase "${{ steps.setup_network.outputs.network_passphrase }}"

      - name: Retrieve native token address
        id: get_xlm_address
        run: |
          echo "xlm_address=$(stellar contract id asset --asset native --network local)" >> $GITHUB_OUTPUT

      - name: Prepare local.json
        run: |
          echo '{
              "chains": {
                  "stellar": {
                      "name": "Stellar",
                      "axelarId": "stellar",
                      "networkType": "local",
                      "chainType": "stellar",
                      "tokenSymbol": "XLM",
                      "tokenAddress": "${{ steps.get_xlm_address.outputs.xlm_address }}",
                      "rpc": "http://127.0.0.1:8000/soroban/rpc",
                      "horizonRpc": "http://127.0.0.1:8000",
                      "contracts": {}
                  }
              }
          }' > ./axelar-chains-config/info/local.json

      - name: Display local.json
        run: cat ./axelar-chains-config/info/local.json

      - name: Get Latest Short Commit Hash
        id: get_commit_hash
        run: |
          COMMIT_HASH=$(git rev-parse --short origin/main)
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT

      - name: Set Artifact URL Base
        id: set_artifact_base_url
        run: |
          ARTIFACT_BASE_URL="https://static.axelar.network/releases/stellar/"
          echo "artifact_base_url=${ARTIFACT_BASE_URL}" >> $GITHUB_OUTPUT

      - name: Setup Stellar wallet
        id: setup_wallet
        run: |
          stellar keys generate test \
              --rpc-url "${{ steps.setup_network.outputs.rpc_url }}" \
              --network-passphrase "${{ steps.setup_network.outputs.network_passphrase }}" \
              --fund
          echo "private_key=$(stellar keys show test)" >> $GITHUB_OUTPUT
          echo "stellar_address=$(stellar keys address test)" >> $GITHUB_OUTPUT

      - name: Prepare .env
        run: |
          echo "PRIVATE_KEY=${{ steps.setup_wallet.outputs.private_key }}" >> .env
          echo "ENV=local" >> .env
          echo "CHAIN=stellar" >> .env
          echo "YES=true" >> .env

      ###### Command: Deploy Contract ######
      - name: Deploy axelar_gateway
        run: |
          CONTRACT_NAME=stellar_axelar_operators
          ARTIFACT_PATH="${{ steps.set_artifact_url.outputs.artifact_url }}/${CONTRACT_NAME}/${{ steps.get_commit_hash.outputs.commit_hash }}/wasm/${CONTRACT_NAME}.wasm"
          echo $ARTIFACT_PATH;
          node stellar/deploy-contract deploy AxelarOperators --artifact-path $ARTIFACT_PATH

      ###### Command: Operators ######
      - name: Execute is operator
        run: node stellar/operators.js is-operator ${{ steps.setup_wallet.outputs.stellar_address }}

      - name: Execute add operator
        run: node stellar/operators.js add-operator ${{ steps.setup_wallet.outputs.stellar_address }}

      - name: Execute remove operator
        run: node stellar/operators.js remove-operator ${{ steps.setup_wallet.outputs.stellar_address }}
