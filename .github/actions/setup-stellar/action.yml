name: Setup Stellar CLI & Network
description: Install Stellar CLI and start a local Stellar network

outputs:
    network_passphrase:
        description: 'Network passphrase of the local Stellar network'
        value: ${{ steps.start.outputs.network_passphrase }}
    horizon_rpc:
        description: 'Horizon RPC URL'
        value: ${{ steps.start.outputs.horizon_rpc }}
    rpc_url:
        description: 'RPC URL of the local Stellar network'
        value: ${{ steps.start.outputs.rpc_url }}
    friendbot:
        description: 'Friendbot of the local Stellar network'
        value: ${{ steps.start.outputs.friendbot }}
runs:
    using: 'composite'
    steps:
        - name: Install stable Rust toolchain
          uses: dtolnay/rust-toolchain@stable

        - name: Install Stellar CLI
          shell: bash
          run: cargo install --locked stellar-cli --version 22.2.0 --features opt

        - name: Start Stellar local network
          id: setup_network
          shell: bash
          run: |
              stellar container start local --protocol-version 22
              echo "network_passphrase='Standalone Network ; February 2017'" >> $GITHUB_OUTPUT
              echo "horizon_rpc=http://localhost:8000" >> $GITHUB_OUTPUT
              echo "rpc_url=http://localhost:8000/soroban/rpc" >> $GITHUB_OUTPUT
              echo "friendbot=http://localhost:8000/friendbot" >> $GITHUB_OUTPUT

        - name: Wait for Stellar network
          shell: bash
          run: |
              echo "Waiting for Stellar network to become ready..."

              while true; do
                echo "Checking Friendbot: ${{ steps.setup_network.outputs.friendbot }} ..."
                if curl -s "${{ steps.setup_network.outputs.friendbot }}" | grep -q '"status"'; then
                  echo "âœ… Stellar Network is ready"
                  exit 0
                fi

                echo "  - Stellar Network not ready yet"
                sleep 2
              done

        - name: Add as configured network
          shell: bash
          run: |
              stellar network add local \
                --rpc-url "${{ steps.setup_network.outputs.rpc_url }}" \
                --network-passphrase "${{ steps.setup_network.outputs.network_passphrase }}"

        - name: Prepare local.json
          shell: bash
          run: |
              echo '{
                  "chains": {
                      "stellar": {
                          "name": "Stellar",
                          "axelarId": "stellar",
                          "networkType": "local",
                          "chainType": "stellar",
                          "tokenSymbol": "XLM",
                          "tokenAddress": "CDMLFMKMMD7MWZP3FKUBZPVHTUEDLSX4BYGYKH4GCESXYHS3IHQ4EIG4",
                          "rpc": "${{ steps.setup_network.outputs.rpc_url }}",
                          "horizonRpc": "${{ steps.setup_network.outputs.horizon_rpc }}",
                          "contracts": {}
                      }
                  }
              }' > ./axelar-chains-config/info/local.json

        - name: Display local.json
          shell: bash
          run: cat ./axelar-chains-config/info/local.json

        - name: Prepare .env
          shell: bash
          run: |
              # The root account is derived from the network ID/passphrase
              echo "PRIVATE_KEY=SC5O7VZUXDJ6JBDSZ74DSERXL7W3Y5LTOAMRF7RQRL3TAGAPS7LUVG3L" >> .env
              echo "ENV=local" >> .env
              echo "CHAIN=stellar" >> .env
              echo "YES=true" >> .env
