name: Setup Stellar CLI & Network
description: Install Stellar CLI and start a local Stellar network

outputs:
    network_passphrase:
        description: 'Network passphrase of the local Stellar network'
        value: ${{ steps.start.outputs.network_passphrase }}
    horizon_rpc:
        description: 'Horizon RPC URL'
        value: ${{ steps.start.outputs.horizon_rpc }}
    rpc_url:
        description: 'RPC URL of the local Stellar network'
        value: ${{ steps.start.outputs.rpc_url }}
    xlm_address:
        description: 'Native XLM asset address'
        value: ${{ steps.native_token.outputs.xlm_address }}

runs:
    using: 'composite'
    steps:
        - name: Install stable Rust toolchain
          uses: dtolnay/rust-toolchain@stable

        - name: Install Stellar CLI
          shell: bash
          run: cargo install --locked stellar-cli --version 22.2.0 --features opt

        - name: Start Stellar local network
          id: start
          shell: bash
          run: |
              stellar container start local --protocol-version 22
              echo "network_passphrase=Standalone Network ; February 2017" >> $GITHUB_OUTPUT
              echo "horizon_rpc=http://localhost:8000" >> $GITHUB_OUTPUT
              echo "rpc_url=http://localhost:8000/soroban/rpc" >> $GITHUB_OUTPUT

        - name: Wait for Stellar network
          shell: bash
          run: |
              echo "Waiting for Stellar network RPC to become ready..."
              while true; do
                echo "Checking..."
                if curl -s "${{ steps.start.outputs.horizon_rpc }}" | grep -q '"current_protocol_version"'; then
                  echo "âœ… Stellar RPC is ready"
                  exit 0
                fi
                echo "  - RPC not ready yet"
                sleep 2
              done

        - name: Add as configured network
          shell: bash
          run: |
              stellar network add local \
                --rpc-url "${{ steps.start.outputs.rpc_url }}" \
                --network-passphrase "${{ steps.start.outputs.network_passphrase }}"

        - name: Retrieve native token address
          id: native_token
          shell: bash
          run: |
              echo "xlm_address=$(stellar contract id asset --asset native --network local)" >> "$GITHUB_OUTPUT"
