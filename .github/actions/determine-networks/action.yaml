name: Determine Networks
description: Detect changed networks from a map of paths.
inputs:
  paths_map:
    required: true
    description: "the paths used to check on the network changes"

outputs:
  networks:
    value: ${{ steps.set-networks.outputs.networks }}
    description: Comma-separated list of changed networks or "none"

runs:
  using: "composite"

  steps:
    - name: Get the latest commit SHA
      shell: bash
      run: |
        LATEST_COMMIT=$(git log -1 --pretty=format:"%H")
        echo "LATEST_COMMIT=$LATEST_COMMIT" >> "$GITHUB_ENV"

    - name: Determine NETWORKS
      shell: bash
      id: set-networks
      run: |
        echo "Modified files in commit ${{ env.LATEST_COMMIT }}"
        MODIFIED_FILES=$(git diff --name-only HEAD~1..HEAD)
        echo "$MODIFIED_FILES"

        NETWORKS=()
        while IFS='|' read -r NETWORK PATHS_CSV; do
          IFS=',' read -ra PATHS <<< "$PATHS_CSV"          
          for PATH in "${PATHS[@]}"; do
            if [[ "$MODIFIED_FILES" == *"$PATH"* ]]; then
              echo "Detected change for $NETWORK in $PATH"
              NETWORKS+=("$NETWORK")
            fi
          done
        done < <(echo '${{ inputs.paths_map }}' | jq -r 'to_entries[] | "\(.key)|\(.value | join(","))"')

        if [ ${#NETWORKS[@]} -eq 0 ]; then
          echo "No relevant changes detected."
          echo "networks=none" >> $GITHUB_OUTPUT
        else
          echo "Detected networks: ${NETWORKS[*]}"
          echo "networks=$(IFS=,; echo "${NETWORKS[*]}")" >> $GITHUB_OUTPUT
        fi
